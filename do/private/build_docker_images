#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
pushd "${SCRIPT_DIR}/../.." > /dev/null 2>&1 || exit 1
source "${SCRIPT_DIR}/script_utils"

configure_environment "us-east-2"

USER_ID=$(id -u)
GROUP_ID=$(id -g)

echo "--- :aws: Log into AWS Elastic Container Registry..."
aws_login "us-east-2"

echo "--- :docker: Building thirdparty docker image for '${PROJECT_REPO}'"
docker build . \
      --pull \
      --file docker/Dockerfile.thirdparty \
      --tag ${PROJECT_REPO}:thirdparty-${GIT_TAG}
exit_on_fail $?

echo "--- :docker: Building testdeps docker image for '${PROJECT_REPO}', commit '${GIT_COMMIT}'"
docker build . \
      --build-arg GIT_TAG=${GIT_TAG} \
      --build-arg SONAR_TOKEN=${SONAR_TOKEN} \
      --build-arg PROJECT_REPO=${PROJECT_REPO} \
      --file docker/Dockerfile.testdeps \
      --tag ${PROJECT_REPO}:testdeps-${GIT_TAG}
exit_on_fail $?

echo "--- :docker: Building the build docker image for branch '${GIT_BRANCH}', commit '${GIT_COMMIT}'"
docker build . \
      --build-arg GIT_TAG=${GIT_TAG} \
      --build-arg PROJECT_REPO=${PROJECT_REPO} \
      --build-arg PROJECT_VERSION=${PROJECT_VERSION} \
      --build-arg BRANCH_NAME=${GIT_BRANCH} \
      --build-arg USER_ID=${USER_ID} \
      --build-arg GROUP_ID=${GROUP_ID} \
      --file docker/Dockerfile.build \
      --tag ${PROJECT_REPO}:build-${GIT_TAG}
exit_on_fail $?

popd
