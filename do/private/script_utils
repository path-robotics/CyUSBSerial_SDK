#!/bin/bash

function show_stack() {
  local frame=0
  while caller $frame; do
    ((frame++));
  done
  echo "$*"
}

function exit_on_fail() {
  if [ "$1" -ne 0 ]; then
    show_stack "Popping and exiting due to error code '$1'" 1>&2
    popd > /dev/null 2>&1 || exit "$1"
    exit "$1"
  fi
}

function exit_on_fail_no_pop() {
  if [ "$1" -ne 0 ]; then
    show_stack "Exiting due to error code '$1'" 1>&2
    exit "$1"
  fi
}

function aws_login() {
  user_os="$(uname -s)"
  aws_region=${1:-"us-east-2"}

  if [[ "${user_os}" == "Darwin" ]]; then
        aws ecr get-login-password --region ${aws_region} | docker login --username AWS --password-stdin "335509591822.dkr.ecr.${aws_region}.amazonaws.com"
  else
        $(aws ecr get-login --no-include-email --region ${aws_region})
  fi

  exit_on_fail $?
}

function check_env_var_with_pop() {
  ENV_VAR=$(printenv ${1})
  if [[ -z ${ENV_VAR} ]]; then
    echo "Environment variable '${1}' is not set.  Stopping build."
    popd > /dev/null 2>&1 || exit "$1"
  fi
}

function configure_environment() {
  aws_region=${1:-"us-east-2"}

  PROJECT_REPO=$(basename `git config --get remote.origin.url` .git | tr '[:upper:]' '[:lower:]')
  PROJECT_REPO_URL=$(git config --get remote.origin.url)
  PROJECT_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` > /dev/null 2>&1 || echo 0.0)
  DEFAULT_BRANCH=$(git remote show ${PROJECT_REPO_URL} | grep 'HEAD branch' | cut -d' ' -f5)

  IMAGE_REPO_URL="335509591822.dkr.ecr.${aws_region}.amazonaws.com"

  GIT_COMMIT=$(git rev-parse --short=9 HEAD)
  GIT_TAG=git-${GIT_COMMIT}
  GIT_BRANCH=${BUILDKITE_BRANCH}
  GIT_BRANCH=${GIT_BRANCH:=$(git rev-parse --abbrev-ref HEAD)}
}